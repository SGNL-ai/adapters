name: Docker Build and Push Go container
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  CODE_COVERAGE_THRESHOLD: 60
  GOLANG_IMAGE: golang:1.24-bookworm

# Cancel previous workflows on the PR branch when there are multiple fast commits.
# `head_ref` is the name of the PR branch and is defined only on pushes to a PR branch. Thus, it
# creates a concurrency group for all commits to a PR branch, cancelling previous workflows.
# When a PR is merged into main, `head_ref` is undefined, so `run_id` is used and a unique
# concurrency group is created for each commit to main, meaning no previous workflows are cancelled.
# Reference: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write
    steps:
      - if: ${{ github.event_name == 'pull_request' }}
        name: Checkout repository (pull_request) ‚úÖ
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - if: ${{ github.event_name == 'push' }}
        name: Checkout repository (push) ‚úÖ
        uses: actions/checkout@v5

      - name: Prepare repository name
        id: repo-name
        run: |
          echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
        shell: bash

      - name: Log in to GHCR üîë
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for sgnl-ai/adapters üè∑Ô∏è
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_LC }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}}-{{sha}},enable={{is_default_branch}}
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build test image ‚¨ÜÔ∏è
        uses: docker/build-push-action@v6
        with:
          target: build
          context: .
          tags: ${{ env.REGISTRY }}/${{ env.REPO_LC }}-test:${{ github.sha }}
          build-args: |
            GITHUB_USERNAME=sgnl-robot
            GITHUB_PAT=${{ secrets.SGNL_ROBOT_PAT }}

      - name: Run tests and code coverage üß™
        run: docker run --rm --network="host" -v /var/run/docker.sock:/var/run/docker.sock -v ${{ github.workspace }}/:/app/ ${{ env.REGISTRY }}/${{ env.REPO_LC }}-test:${{ github.sha }} go test -coverprofile=coverage.txt -covermode=atomic -v ./...

      # CodeCov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build and push run image ‚¨ÜÔ∏è
        uses: docker/build-push-action@v6
        with:
          push: true
          target: run
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_USERNAME=sgnl-robot
            GITHUB_PAT=${{ secrets.SGNL_ROBOT_PAT }}

      - name: Run Trivy image vulnerability scanner on run image üîç
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REPO_LC }}:${{ steps.meta.outputs.version }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
          timeout: 30m

  check-success:
    runs-on: ubuntu-latest
    needs: build-and-push
    name: check-build-push-status
    if: ${{ always() }} # This makes job to run always even if build-push skip or fail
    steps:
      - name: exit-if-build-push-fail
        run: |
          if [ "${{ needs.build-and-push.result }}" != "success" ]; then
            exit 1
          fi
